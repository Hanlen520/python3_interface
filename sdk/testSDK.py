# coding=utf-8
from jpype import *
from jpype import JavaException
import sys
import time

# 用于测试xml的发送和接收


# 发送xml数据
from test import env


def sendXml(hostName):
	print("going to send a message...")
	zmsClient = env.ZmsClient(env.apiId, env.apiKey, hostName, env.unicastPort, env.multicastPort)

	zmsClient.applyMulticastToken()
	zmsMulticasSender = zmsClient.getZmsHttpSenderToken()

	requestSendMessage = env.RequestSendMessageModel()
	requestSendMessage.setQueueName(env.sQueue)
	requestSendMessage.setFrom(env.sfrom)
	requestSendMessage.setSendTs(java.lang.String.valueOf(env.System.currentTimeMillis()))

	messageBodyModel = env.MessageBodyModel()
	messageBodyModel.setBlobType("string")
	data = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iR0IyMzEyIj8+PFBhY2thZ2U+PFBhY2thZ2VIZWFkPjxCQkg+MS4wMDwvQkJIPjxTSkJCSD48IVtDREFUQVtdXT48L1NKQkJIPjxTSkJMWD48IVtDREFUQVtxeXh4XV0+PC9TSkJMWD48RFdETT48IVtDREFUQVs0NDAxMjFdXT48L0RXRE0+PERXTUM+PCFbQ0RBVEFbuePW3crQu6i2vMf4uaTJzNDQ1f653MDtvtZdXT48L0RXTUM+PEpMUz4xPC9KTFM+PElORk9EQVRFPjwhW0NEQVRBWzIwMTcwNzEyMTcwNjI1XV0+PC9JTkZPREFURT48L1BhY2thZ2VIZWFkPjxEYXRhPjxSZWNvcmQ+PENFUlRJTkZPPjxERUxGTEFHPjwhW0NEQVRBW11dPjwvREVMRkxBRz48RU5USVRZTk8+PCFbQ0RBVEFbNDQwMTIxMTIxMDIyMDE0MDUyMTAwNDI5XV0+PC9FTlRJVFlOTz48SU5GT0FDVElPTlRZUEU+PCFbQ0RBVEFbMl1dPjwvSU5GT0FDVElPTlRZUEU+PEVOVE5BTUU+PCFbQ0RBVEFbuePW3crQu6qy07jWssTT0M/euavLvl1dPjwvRU5UTkFNRT48VU5JU0NJRD48IVtDREFUQVs5MTQ0MDEwMTMwNDMxOTA4OFldXT48L1VOSVNDSUQ+PFJFR05PPjwhW0NEQVRBWzQ0MDEyMTAwMDE3ODE1MV1dPjwvUkVHTk8+PEVOVFRZUEU+PCFbQ0RBVEFbMTEzMF1dPjwvRU5UVFlQRT48RVNUREFURT48IVtDREFUQVsyMDE0LTA1LTI3XV0+PC9FU1REQVRFPjxMRVJFUD48IVtDREFUQVvFy9a+wfddXT48L0xFUkVQPjxSRUdDQVA+PCFbQ0RBVEFbMjAwLjBdXT48L1JFR0NBUD48UkVHQ0FQQ1VSPjwhW0NEQVRBWzE1Nl1dPjwvUkVHQ0FQQ1VSPjxET00+PCFbQ0RBVEFbuePW3crQu6i2vMf40MK7qr3WvfC2vLuo1LBFN7SxytfEz7b+suMyMDFdXT48L0RPTT48T1BTQ09QRT48IVtDREFUQVu41rLExfq3oju41rLEwePK2zu9qNb+ssTBz8novMahotfJ0a+3/s7xO72ossShotewys6yxMHPxfq3oju98Mr017DKzrLEwc/B48rbO7LEwc+/xtGn0dC+v6GivLzK9b+qt6I7vajW/rLEwc+87NHpt/7O8TvK0sTa17DKzqGiyei8xju9qNb+uaSzzLrzxtrXsMrOoaLXsNDeus3H5cDtO8rOzu/XsMrOyei8xrf+zvE7zuW98LL6xrfF+reiO87lvfDB48rbO8nMxrfF+reiw7PS16Oo0O2/ycnzxfrA4MnMxrez/c3io6k7XV0+PC9PUFNDT1BFPjxPUEZST00+PCFbQ0RBVEFbMjAxNC0wNS0yN11dPjwvT1BGUk9NPjxPUFRPPjwhW0NEQVRBWzIwMTctMTAtMTBdXT48L09QVE8+PFJFR09SRz48IVtDREFUQVs0NDAxMjFdXT48L1JFR09SRz48QVBQUkRBVEU+PCFbQ0RBVEFbMjAxNy0wNy0xMl1dPjwvQVBQUkRBVEU+PFBST0xPQz48IVtDREFUQVu549bdytC7qLa8x/jQwruqvda98La8u6jUsEU3tLHK18TPtv6y4zIwMV1dPjwvUFJPTE9DPjxZSUVESVNUUklDVD48IVtDREFUQVtdXT48L1lJRURJU1RSSUNUPjxPUFNUQVRFPjwhW0NEQVRBWzRdXT48L09QU1RBVEU+PENFUlRDQVBUVVJFPjwhW0NEQVRBWzAwMF1dPjwvQ0VSVENBUFRVUkU+PEZPUkVOVE5BTUU+PCFbQ0RBVEFbXV0+PC9GT1JFTlROQU1FPjxGT1JET00+PCFbQ0RBVEFbXV0+PC9GT1JET00+PElORFVTVFJZQ08+PCFbQ0RBVEFbNTE3NV1dPjwvSU5EVVNUUllDTz48UE9TVENPREU+PCFbQ0RBVEFbXV0+PC9QT1NUQ09ERT48UEhPTkU+PCFbQ0RBVEFbMTMyODg2MTU3OTJdXT48L1BIT05FPjxDQUxDVUxBVElPTk1FVEhPRD48IVtDREFUQVsxXV0+PC9DQUxDVUxBVElPTk1FVEhPRD48L0NFUlRJTkZPPjxJTlZFU1RPUkxJU1Q+PElOVkVTVE9SRE9DVU1FTlQ+PElOVlRZUEU+PCFbQ0RBVEFbMjBdXT48L0lOVlRZUEU+PElOVj48IVtDREFUQVvFy8jzu6hdXT48L0lOVj48Q09VTlRSWT48IVtDREFUQVsxNTZdXT48L0NPVU5UUlk+PENFUlRZUEU+PCFbQ0RBVEFbMTBdXT48L0NFUlRZUEU+PENFUk5PPjwhW0NEQVRBWzQ0MDEyMTE5NzQwMzMxMDY4OV1dPjwvQ0VSTk8+PENVUlJFTkNZPjwhW0NEQVRBWzE1Nl1dPjwvQ1VSUkVOQ1k+PFNVQkNPTkFNPjwhW0NEQVRBWzAuMF1dPjwvU1VCQ09OQU0+PENPTkRBVEU+PCFbQ0RBVEFbXV0+PC9DT05EQVRFPjxDT05GT1JNPjwhW0NEQVRBWzFdXT48L0NPTkZPUk0+PFNVQkNPTlBST1A+PCFbQ0RBVEFbMC4wXV0+PC9TVUJDT05QUk9QPjxBQ0NPTkFNPjwhW0NEQVRBWzAuMF1dPjwvQUNDT05BTT48RVZBRk9STT48IVtDREFUQVtdXT48L0VWQUZPUk0+PFJFU1BGT1JNPjwhW0NEQVRBW11dPjwvUkVTUEZPUk0+PC9JTlZFU1RPUkRPQ1VNRU5UPjxJTlZFU1RPUkRPQ1VNRU5UPjxJTlZUWVBFPjwhW0NEQVRBWzIwXV0+PC9JTlZUWVBFPjxJTlY+PCFbQ0RBVEFbxcvWvsH3XV0+PC9JTlY+PENPVU5UUlk+PCFbQ0RBVEFbMTU2XV0+PC9DT1VOVFJZPjxDRVJUWVBFPjwhW0NEQVRBWzEwXV0+PC9DRVJUWVBFPjxDRVJOTz48IVtDREFUQVs0NDAxMjExOTcyMTIxNjA2NzNdXT48L0NFUk5PPjxDVVJSRU5DWT48IVtDREFUQVsxNTZdXT48L0NVUlJFTkNZPjxTVUJDT05BTT48IVtDREFUQVswLjBdXT48L1NVQkNPTkFNPjxDT05EQVRFPjwhW0NEQVRBW11dPjwvQ09OREFURT48Q09ORk9STT48IVtDREFUQVsxXV0+PC9DT05GT1JNPjxTVUJDT05QUk9QPjwhW0NEQVRBWzAuMF1dPjwvU1VCQ09OUFJPUD48QUNDT05BTT48IVtDREFUQVswLjBdXT48L0FDQ09OQU0+PEVWQUZPUk0+PCFbQ0RBVEFbXV0+PC9FVkFGT1JNPjxSRVNQRk9STT48IVtDREFUQVtdXT48L1JFU1BGT1JNPjwvSU5WRVNUT1JET0NVTUVOVD48L0lOVkVTVE9STElTVD48TEVSRVBJTkZPTElTVD48TEVSRVBJTkZPPjxOQU1FPjwhW0NEQVRBW8XL1r7B911dPjwvTkFNRT48VEVMPjwhW0NEQVRBWzEzMjg4NjE1NzkyXV0+PC9URUw+PE1PQlRFTD48IVtDREFUQVtdXT48L01PQlRFTD48RU1BSUw+PCFbQ0RBVEFbXV0+PC9FTUFJTD48Q0VSVFlQRT48IVtDREFUQVsxMF1dPjwvQ0VSVFlQRT48Q0VSTk8+PCFbQ0RBVEFbNDQwMTIxMTk3MjEyMTYwNjczXV0+PC9DRVJOTz48L0xFUkVQSU5GTz48L0xFUkVQSU5GT0xJU1Q+PEJSQU5DSElORk9MSVNUPjwvQlJBTkNISU5GT0xJU1Q+PE1PRElGWUlORk9MSVNUPjwvTU9ESUZZSU5GT0xJU1Q+PENBTkNMRUlORk8+PENMRUFOVEFYPjwhW0NEQVRBWzExXV0+PC9DTEVBTlRBWD48RVFVUExFQ0FOUkVBPjwhW0NEQVRBW7720um94smiXV0+PC9FUVVQTEVDQU5SRUE+PENBTkRBVEU+PCFbQ0RBVEFbMjAxNy0wNy0xMl1dPjwvQ0FOREFURT48L0NBTkNMRUlORk8+PFBBS0RBVEU+MjAxNy0wNy0xMiAxNzowNjoyNTwvUEFLREFURT48L1JlY29yZD48L0RhdGE+PC9QYWNrYWdlPg=="
	messageBodyModel.setBlob(data)
	requestSendMessage.setMessageBody(messageBodyModel)

	customAttributes = java.util.ArrayList()
	attributes = env.AttributeModel("attr1", "attr2")
	customAttributes.add(attributes)

	requestSendMessage.setCustomAttributes(customAttributes)

	try:
		responseSuccess = zmsMulticasSender.sendMessage(requestSendMessage)

		# This bug has been fixed
		zmsClient.closeAccess()
	except JavaException as ex:
		print("Caught Java exception : ", ex.message())
		print(ex.stacktrace())
		exit(1)


# 接收xml数据
def receiveXml(hostName):
	zmsClient = env.ZmsClient(env.apiId, env.apiKey, hostName,
							  env.unicastPort, env.multicastPort)

	zmsClient.applyMulticastToken()
	zmsMulticastReceiver = zmsClient.getZmsHttpReceiverToken()

	requestReceiveMessage = env.RequestReceiveMessageModel()
	requestReceiveMessage.setDuration("3000");
	requestReceiveMessage.setMsgNumber("3");
	requestReceiveMessage.setQueueName(env.rQueue);
	requestReceiveMessage.setRequestTs(java.lang.String.valueOf(java.lang.System.currentTimeMillis()));

	try:
		receiveMessages = zmsMulticastReceiver.receiveMessages(requestReceiveMessage)
		list = receiveMessages.getMessages()

		count = list.size()

		zmsClient.closeAccess()
		return count
	except JavaException as ex:
		print ("Caught Java exception : ", ex.message())
		print (ex.stacktrace())
		exit(1)


if __name__ == '__main__':
	env.configs(sys.argv[1:])
	# 执行信息发送
	for ip in env.hostNameList:
		sendXml(ip)
		break

	time.sleep(1)
	count = 0

	for time in range(9):
		# 执行信息接收
		for ip in env.hostNameList:
			count += receiveXml(ip)


	if count < 1:
		exit(1)

# 测试java输出
# jprintln = System.out.println
# jprintln("hello world")

# 关闭JVM
shutdownJVM()
